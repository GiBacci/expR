% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R
\name{getSingleEndFromFilename}
\alias{getSingleEndFromFilename}
\title{Constructor for single-end experiments}
\usage{
getSingleEndFromFilename(maindir = ".", pattern = ".fastq",
  samples = NULL, run = NULL, output = NULL, recursive = F)
}
\arguments{
\item{maindir}{character. The directory in which to search for
sequence files.}

\item{pattern}{regular expression. Only file names which match
the regular expression will be returned.}

\item{samples}{it can be NULL, a character vector, or a funciton.
If it's NULL then file names will be used as sample names. If
it's a character vector sample will be called using the names
provided. If it's a function file names will be processed
using the function provided and samples will have the resulting
names.}

\item{run}{one of "none", "folder", or "header". If "none" no
run will be specified, if "folder" the run id will be inferred from
the folder structure, and if "header" the run id will be parsed from
the header of the sequences.}

\item{output}{similar to samples parameter}

\item{recursive}{logical. Should the listing recurse into directories?}
}
\value{
a Single-end experiment
}
\description{
This function will return a single end experiment based
on the name of the files selected.
}
\examples{
\dontrun{
single <- getSingleEndFromFilename(samples = formatSample(sep = "_"),
                                   recursive = F,
                                   run = "header",
                                   output = formatOutptut(prefix = "out_"))
}
}
\seealso{
\code{\link[=formatSample]{formatSample()}} and \code{\link[=formatOutptut]{formatOutptut()}} for sample and output
formatting.
}
